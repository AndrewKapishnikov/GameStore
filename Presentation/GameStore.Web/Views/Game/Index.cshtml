@model GameModel
@{
    ViewData["Title"] = "Описание игры";
}
@await Html.PartialAsync("Partials/SearchFormPartial")
<h3 class="search_h3">Информация об игре</h3>
<table class="table table-search">
    <thead>
        <tr>
            <th>Название игры </th>
            <th>Разработчик</th>
            <th>Жанр</th>
            <th class="text-right">Дата выхода</th>
            <th class="text-right">Цена</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                @Html.DisplayFor(modelItem => modelItem.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => modelItem.Publisher)
            </td>
            <td>
                @Html.DisplayFor(modelItem => modelItem.Category)
            </td>
            <td class="text-right">
                @Model.ReleaseDate.ToString("MMMM yyyy ", CultureInfo.GetCultureInfo("ru-RU"))
            </td>
            <td class="price text-right">
                @Math.Truncate(Model.Price) руб.
            </td>
        </tr>

    </tbody>
</table>
<div class="imagemodel">
    @if (Model.ImageData != null)
    {
        <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ImageData))" />
    }
</div>
<div class="mt-4 pl-5">
    <form  asp-controller="order" asp-action="additem" asp-route-returnUrl="@Context.Request.GetCurrentUrl()" method="post">
        <input type="hidden" name="gameId" value="@Model.GameId" />
        <button class="incor clickbutton" type="submit"><img src="/images/korz.png" alt="In Cart"></button>
    </form>
    <p class="shortdescription">
        @Html.Raw(@Model.ShortDescription)
    </p>
</div>
<div class="description">
    <div class="textdescription">
        @Html.Raw(@Model.Description)
    </div>
</div>
